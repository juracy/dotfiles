{
  "my snippet": {
    "prefix": "log",
    "body": ["console.log(\"$1\")"],
    "description": "Expand `log` to `console.log()`"
  },
  "angular material spec": {
    "prefix": "spec",
    "body": [
      "describe('$0', () => {",
      "  let component: $0",
      "  let fixture: ComponentFixture<$0>",
      "  let element: HTMLElement",
      "",
      "  beforeEach(async () => {",
      "    await TestBed.configureTestingModule({",
      "      imports: [",
      "        NoopAnimationsModule,",
      "        ReactiveFormsModule,",
      "        MatButtonModule,",
      "        MatCardModule,",
      "        MatDividerModule,",
      "        MatFormFieldModule,",
      "        MatIconModule,",
      "        MatInputModule,",
      "        MatOptionModule,",
      "        MatRadioModule,",
      "        MatSelectModule,",
      "        IMaskModule,",
      "        ActionButtonComponent,",
      "      ],",
      "      declarations: [$0],",
      "      providers: [",
      "        provideHttpClient(),",
      "        provideHttpClientTesting(),",
      "        provideStore([]),",
      "        provideRouter([]),",
      "        { provide: IMASK_FACTORY, useClass: MockIMaskFactory },",
      "      ],",
      "    }).compileComponents()",
      "    fixture = TestBed.createComponent($0)",
      "    component = fixture.componentInstance",
      "    element = fixture.nativeElement",
      "  })",
      "",
      "  it('should create', () => {",
      "    expect(component).toBeDefined()",
      "  })",
      "",
      "  it('should render empty form', async () => {",
      "    fixture.detectChanges()",
      "    expect(element.querySelectorAll('mat-form-field').length).toEqual(5)",
      "  })",
      "})",
      ""
    ],
    "description": "Spec skeleton with angular material"
  }
}
